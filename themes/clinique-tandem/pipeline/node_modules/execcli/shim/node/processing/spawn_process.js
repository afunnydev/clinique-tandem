/**
 * @function spawnProcess
 */
'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var co = require('co');
var childProcess = require('child_process');

/** @lends spawnProcess */
function spawnProcess(bin, args) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var _options$suppressOut = options.suppressOut,
      suppressOut = _options$suppressOut === undefined ? false : _options$suppressOut;

  return co( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return new _promise2.default(function (resolve, reject) {
              var spawned = childProcess.spawn(bin, args, options);
              if (!suppressOut) {
                spawned.stdout.pipe(process.stdout);
                spawned.stderr.pipe(process.stderr);
              }
              spawned.on('exit', function (exitCode) {
                var err = exitCode === 0 ? null : new Error('Exit with code: ' + exitCode);
                err ? reject(err) : resolve();
              });
              return spawned;
            });

          case 2:
            return _context.abrupt('return', _context.sent);

          case 3:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));
}

module.exports = spawnProcess;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwYXduX3Byb2Nlc3MuanMiXSwibmFtZXMiOlsiY28iLCJyZXF1aXJlIiwiY2hpbGRQcm9jZXNzIiwic3Bhd25Qcm9jZXNzIiwiYmluIiwiYXJncyIsIm9wdGlvbnMiLCJzdXBwcmVzc091dCIsInJlc29sdmUiLCJyZWplY3QiLCJzcGF3bmVkIiwic3Bhd24iLCJzdGRvdXQiLCJwaXBlIiwicHJvY2VzcyIsInN0ZGVyciIsIm9uIiwiZXhpdENvZGUiLCJlcnIiLCJFcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFHQTs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsS0FBS0MsUUFBUSxJQUFSLENBQVg7QUFDQSxJQUFNQyxlQUFlRCxRQUFRLGVBQVIsQ0FBckI7O0FBRUE7QUFDQSxTQUFTRSxZQUFULENBQXVCQyxHQUF2QixFQUE0QkMsSUFBNUIsRUFBZ0Q7QUFBQSxNQUFkQyxPQUFjLHVFQUFKLEVBQUk7QUFBQSw2QkFHMUNBLE9BSDBDLENBRTVDQyxXQUY0QztBQUFBLE1BRTVDQSxXQUY0Qyx3Q0FFOUIsS0FGOEI7O0FBSTlDLFNBQU9QLDRDQUFHO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNLLHNCQUFZLFVBQUNRLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUM1QyxrQkFBSUMsVUFBVVIsYUFBYVMsS0FBYixDQUFtQlAsR0FBbkIsRUFBd0JDLElBQXhCLEVBQThCQyxPQUE5QixDQUFkO0FBQ0Esa0JBQUksQ0FBQ0MsV0FBTCxFQUFrQjtBQUNoQkcsd0JBQVFFLE1BQVIsQ0FBZUMsSUFBZixDQUFvQkMsUUFBUUYsTUFBNUI7QUFDQUYsd0JBQVFLLE1BQVIsQ0FBZUYsSUFBZixDQUFvQkMsUUFBUUMsTUFBNUI7QUFDRDtBQUNETCxzQkFBUU0sRUFBUixDQUFXLE1BQVgsRUFBbUIsVUFBVUMsUUFBVixFQUFvQjtBQUNyQyxvQkFBSUMsTUFBTUQsYUFBYSxDQUFiLEdBQWlCLElBQWpCLEdBQXdCLElBQUlFLEtBQUosc0JBQTZCRixRQUE3QixDQUFsQztBQUNBQyxzQkFBTVQsT0FBT1MsR0FBUCxDQUFOLEdBQW9CVixTQUFwQjtBQUNELGVBSEQ7QUFJQSxxQkFBT0UsT0FBUDtBQUNELGFBWFksQ0FETDs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUgsRUFBUDtBQWNEOztBQUVEVSxPQUFPQyxPQUFQLEdBQWlCbEIsWUFBakIiLCJmaWxlIjoic3Bhd25fcHJvY2Vzcy5qcyIsInNvdXJjZVJvb3QiOiJsaWIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmdW5jdGlvbiBzcGF3blByb2Nlc3NcbiAqL1xuJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IGNvID0gcmVxdWlyZSgnY28nKVxuY29uc3QgY2hpbGRQcm9jZXNzID0gcmVxdWlyZSgnY2hpbGRfcHJvY2VzcycpXG5cbi8qKiBAbGVuZHMgc3Bhd25Qcm9jZXNzICovXG5mdW5jdGlvbiBzcGF3blByb2Nlc3MgKGJpbiwgYXJncywgb3B0aW9ucyA9IHt9KSB7XG4gIGxldCB7XG4gICAgc3VwcHJlc3NPdXQgPSBmYWxzZVxuICB9ID0gb3B0aW9uc1xuICByZXR1cm4gY28oZnVuY3Rpb24gKiAoKSB7XG4gICAgcmV0dXJuIHlpZWxkIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGxldCBzcGF3bmVkID0gY2hpbGRQcm9jZXNzLnNwYXduKGJpbiwgYXJncywgb3B0aW9ucylcbiAgICAgIGlmICghc3VwcHJlc3NPdXQpIHtcbiAgICAgICAgc3Bhd25lZC5zdGRvdXQucGlwZShwcm9jZXNzLnN0ZG91dClcbiAgICAgICAgc3Bhd25lZC5zdGRlcnIucGlwZShwcm9jZXNzLnN0ZGVycilcbiAgICAgIH1cbiAgICAgIHNwYXduZWQub24oJ2V4aXQnLCBmdW5jdGlvbiAoZXhpdENvZGUpIHtcbiAgICAgICAgbGV0IGVyciA9IGV4aXRDb2RlID09PSAwID8gbnVsbCA6IG5ldyBFcnJvcihgRXhpdCB3aXRoIGNvZGU6ICR7ZXhpdENvZGV9YClcbiAgICAgICAgZXJyID8gcmVqZWN0KGVycikgOiByZXNvbHZlKClcbiAgICAgIH0pXG4gICAgICByZXR1cm4gc3Bhd25lZFxuICAgIH0pXG4gIH0pXG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3Bhd25Qcm9jZXNzXG4iXX0=